<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FHI-aims编译安装</title>
      <link href="2020/12/29/FHI-aims%E5%AE%89%E8%A3%85/"/>
      <url>2020/12/29/FHI-aims%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>FHI-aims使用全电子的数值原子轨道和全势，进行分子、固体的从头电子结构模拟。</p><p><a href="https://aimsclub.fhi-berlin.mpg.de/">软件官网https://aimsclub.fhi-berlin.mpg.de</a></p><p>在本文中将记录其如何进行安装</p><a id="more"></a><h1 id="预备软件包"><a href="#预备软件包" class="headerlink" title="预备软件包"></a>预备软件包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install make</span><br><span class="line">sudo apt install cmake</span><br></pre></td></tr></table></figure><h1 id="安装INTEL编译器"><a href="#安装INTEL编译器" class="headerlink" title="安装INTEL编译器"></a>安装INTEL编译器</h1><h1 id="安装FHI-aims"><a href="#安装FHI-aims" class="headerlink" title="安装FHI-aims"></a>安装FHI-aims</h1><p>解包文件后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build&#x2F;</span><br><span class="line">touch initial_cache.cmake</span><br></pre></td></tr></table></figure><p>修改initial_cache.cmake如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">set(CMAKE_Fortran_COMPILER &quot;mpiifort&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(CMAKE_Fortran_FLAGS &quot;-O3 -ip -fp-model precise&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(Fortran_MIN_FLAGS &quot;-O0 -fp-model precise&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(CMAKE_C_COMPILER &quot;mpiicc&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(CMAKE_C_FLAGS &quot;-O3 -ip -fp-model precise&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(LIB_PATHS &quot;&#x2F;opt&#x2F;intel&#x2F;mkl&#x2F;lib&#x2F;intel64&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(LIBS &quot;mkl_intel_lp64 mkl_sequential mkl_core mkl_blacs_intelmpi_lp64 mkl_scalapack_lp64&quot; CACHE STRING &quot;&quot;)</span><br><span class="line">set(USE_MPI ON CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_SCALAPACK ON CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_C_FILES ON CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_SPGLIB ON CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_LIBXC ON CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_HDF5 OFF CACHE BOOL &quot;&quot;)</span><br><span class="line">set(USE_RLSY ON CACHE BOOL &quot;&quot;)</span><br></pre></td></tr></table></figure><p>与官方文件主要差异是使用了并行版本的<code>ifort</code>和<code>icc</code></p><p>然后进行预编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -C initial_cache.cmake ..&#x2F;</span><br></pre></td></tr></table></figure><p>在没有报错后可以正式进行编译，尽量避免多核编译避免麻烦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>在编译完成后，会在<code>./bin/</code>文件夹中生成对应的软件，创建软链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s .&#x2F;bin&#x2F;aims.xxxxxxx.scalapack.mpi.x &#x2F;usr&#x2F;bin&#x2F;aims</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ulimit -s unlimited</span><br><span class="line">mpirun -n 12 aims | tee output.out</span><br></pre></td></tr></table></figure><p>进行计算</p>]]></content>
      
      
      <categories>
          
          <category> FHI-aims </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FHI-aims </tag>
            
            <tag> 编译安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP编译安装</title>
      <link href="2020/12/29/VASP%E5%AE%89%E8%A3%85/"/>
      <url>2020/12/29/VASP%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>VASP是维也纳大学Hafner小组开发的进行电子结构计算和量子力学-分子动力学模拟软件包。它是目前材料模拟和计算物质科学研究中最流行的商用软件之一。</p><p><a href="http://www.vasp.at/">官网http://www.vasp.at/</a></p><p>在本文中将记录其如何进行安装</p><a id="more"></a><h1 id="预备软件包"><a href="#预备软件包" class="headerlink" title="预备软件包"></a>预备软件包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install make</span><br></pre></td></tr></table></figure><h1 id="安装INTEL编译器"><a href="#安装INTEL编译器" class="headerlink" title="安装INTEL编译器"></a>安装INTEL编译器</h1><p>在正常安装后，首先需要自行编译快速傅里叶变换相关库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;PATH&#x2F;TO&#x2F;INTEL&#x2F;compilers_and_libraries_2020.4.304&#x2F;linux&#x2F;mkl&#x2F;interfaces&#x2F;fftw3xf</span><br><span class="line">sudo chmod 777 .</span><br><span class="line">make libintel64</span><br></pre></td></tr></table></figure><p>至此，intel编译器安装完成</p><h1 id="安装VASP"><a href="#安装VASP" class="headerlink" title="安装VASP"></a>安装VASP</h1><p>首先，加载INTEL编译器的环境变量<br><code>source /opt/intel/compilers_and_libraries_2020.4.304/linux/bin/compilervars.sh intel64</code></p><p>然后进入VASP安装包界面，从<code>./arch/</code>文件夹中选择合适本机器的<code>makefile.include...</code>，将其重命名为<code>makefile.include</code>，并复制到vasp根目录下。</p><p><code>make all</code>等待即可</p><p>编译会在<code>./bin/</code>文件夹下生成三个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vasp_gam</span><br><span class="line">vasp_ncl</span><br><span class="line">vasp_std</span><br></pre></td></tr></table></figure><p>可以设置软连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s .&#x2F;bin&#x2F;vasp_std &#x2F;usr&#x2F;bin&#x2F;vasp_std</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ulimit -s unlimited</span><br><span class="line">mpirun -n 10 vasp_std</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> VASP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译安装 </tag>
            
            <tag> VASP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
